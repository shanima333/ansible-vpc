---

 - name: "Create an EC2 instance"
   hosts: localhost
   vars_files:
     - ec2.vars
   tasks:

     - name: create a new ec2 VPC
       ec2_vpc_net:
         name: "{{ vpc_name }}"
         cidr_block: "{{ cidr }}"
         region: "{{ region }}"
         dns_support: yes
         dns_hostnames: yes
         tenancy: default
         state: present
       register: ec2_vpc
     
     - name: create ec2 vpc internet gateway       
       ec2_vpc_igw:
         vpc_id: "{{ ec2_vpc.vpc.id }}"
         region: "{{ region }}"
         state: present 
         tags:
           Name: "{{ igw_name }}"
       register: igw_result

     - name: create ec2 vpc subnet
       ec2_vpc_subnet:
         vpc_id: "{{ ec2_vpc.vpc.id }}"
         region: "{{ region }}"
         az: "{{ zone1 }}"      
         state: present
         cidr: "{{ cidr1 }}"
         map_public: yes
         resource_tags:
           Name: "{{ subnet_name1 }}"
       register: subnet_result  

     - name: create ec2 vpc subnet2
       ec2_vpc_subnet:
         vpc_id: "{{ ec2_vpc.vpc.id }}"
         region: "{{ region }}"
         az: "{{ zone2 }}"      
         state: present
         cidr: "{{ cidr2 }}"
         map_public: yes
         resource_tags:
           Name: "{{ subnet_name2 }}"
       register: subnet_result2  

     - name: create ec2 security group
       ec2_group:
         vpc_id: "{{ ec2_vpc.vpc.id }}"
         region: "{{ region }}"
         state: present
         name: "{{ security_group_name }}"
         description: "{{ security_group_name }}"
         tags:
           Name: "{{ security_group_name  }}"
         rules:
           - proto: tcp
             ports:
             - 22
             cidr_ip: "{{ cidr3 }}"
             rule_desc: allow all on port 22
       register: security_group_results

     - name: create ec2 VPC public subnet route table
       ec2_vpc_route_table:
         vpc_id: "{{ ec2_vpc.vpc.id }}"
         region: "{{ region }}"
         state: present
         tags:
           Name: "{{ route_table_name }}"
         subnets: [ "{{ subnet_result.subnet.id }}", "{{ subnet_result2.subnet.id }}" ]
         routes:
           - dest: "{{ cidr3 }}" 
             gateway_id: "{{ igw_result.gateway_id }}"
       register: public_route_table  

     - name: Create a new EC2 key pair
       ec2_key:
         name: "{{ key }}"
         region: "{{ region }}"
       register: ec2_key

     - name: Save private key
       copy:
         content="{{ ec2_key.key.private_key }}" dest="./keys/{{ key }}.pem" mode=0600
       when: ec2_key.changed
       
     - name: Create EC2 instances
       ec2:
         key_name: "{{ key }}"
         region: "{{ region }}"
         instance_type: "{{ type }}"
         image: "{{ ami }}"
         vpc_subnet_id: "{{ subnet_result.subnet.id }}"
         group_id: "{{ security_group_results.group_id }}"
         wait: yes
         instance_tags:
           Name: demo
         count: 1
         assign_public_ip: yes
       register: ec2
